migration:
  enabled: true
  from: 33
  to: 34

  configs:
    new:
      name: new
      hook: pre-upgrade
      weight: "-5"
      files: "migrations/34/configs/new/*"
    common:
      name: common
      hook: pre-upgrade
      weight: "-5"
      files: "migrations/34/configs/common/*"
    syslog:
      name: syslog
      hook: pre-upgrade
      weight: "-5"
      files: "migrations/34/configs/syslog/*"
    nginx:
      name: nginx
      hook: pre-upgrade
      weight: "-5"
      files: "migrations/34/configs/nginx/*"
    rdpmitm:
      name: rdpmitm
      hook: pre-upgrade
      weight: "-5"
      files: "migrations/34/configs/rdpmitm/*"
    db-cert:
      name: db-cert
      hook: pre-upgrade
      weight: "-5"
      files: "migrations/34/configs/database/certificate/*"
    upgrade-scripts:
      name: upgrade-scripts
      hook: pre-upgrade
      weight: "-5"
      files: "migrations/34/configs/scripts/*"
# global value to define the PrivX images' repository
privxRepository: &privxRepo public.ecr.aws/sshprivx

# global value to define the PrivX images' version tag
privxVersion: &privxTag "34.0"

# ==========Upgrader===============
jobs:
  upgrader:
    name: upgrader
    hook: pre-upgrade
    weight: "-4"
    hookDeletePolicy: before-hook-creation
    image:
      repository: *privxRepo
      name: upgrader
      pullPolicy: IfNotPresent
      tag: *privxTag

    imagePullSecrets:
      - name: docker-pull-secret
    environment:
      - name: UPGRADER_CMD
        value: upgrade
    useGlobalPodSecurityContext: true
    securityContext: {}
    resources: {}
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi
    volumes:
      enabled: true
      volumeMounts:
        - mountPath: /opt/privx/keyvault
          name: privx-config
          subPath: keyvault
        - mountPath: /opt/privx/etc
          name: privx-config
          subPath: privxetc
        - mountPath: /etc/nginx/ssl
          name: privx-config
          subPath: nginxssl
      claims:
        - name: privx-config
          claimName: privx-claim
      configMaps:
        - name: privx-new-config
          configMap:
            name: new-config
        - name: privx-common-config
          configMap:
            name: common-config
        - name: privx-nginx-config
          configMap:
            name: nginx-config
        - name: privx-rdpmitm-config
          configMap:
            name: rdpmitm-config
        - name: privx-database-certificate
          configMap:
            name: db-cert-config
        - name: privx-upgrade-scripts
          configMap:
            name: upgrade-scripts-config
    initContainersEnvironment:
      - name: config-copier
        env:
          - name: "SSLMODE"
            valueFromTemplate: "{{ .Values.db.sslmode }}"
    initContainers:
      - name: config-copier
        image: "bash:5.2"
        command: [ "bash", "-c" ]
        args:
          - mkdir -p /opt/privx/etc/new;
            echo copying new template tomls;
            cp -f /new-templates-mount/* /opt/privx/etc/new/;
            echo copying common configs;
            cp -f /common-config-mount/* /opt/privx/etc/;
            echo copying nginx configs;
            cp -f /upgraded-nginx-config/* /etc/nginx/privx/;
            echo copying rdpmitm configs;
            cp -f /upgraded-rdpmitm-config/* /opt/privx/etc/rdpmitm/;
            echo copying the database certificate;
            cp /certificate-mount/server.crt /opt/privx/etc/privx-db-trust-anchor.pem;
            echo setting sslrootcert if needed;
            cp /upgradescripts/check-db-cert.sh /opt/privx/etc/check-db-cert.sh;
            chmod +x /opt/privx/etc/check-db-cert.sh;
            /opt/privx/etc/check-db-cert.sh /opt/privx/etc/privx-db-trust-anchor.pem;
            echo done with sslrootcert changes
        volumeMounts:
          - name: privx-new-config
            mountPath: /new-templates-mount
          - name: privx-common-config
            mountPath: /common-config-mount
          - name: privx-config
            mountPath: /opt/privx/etc
            subPath: privxetc
          - name: privx-nginx-config
            mountPath: /upgraded-nginx-config
          - name: privx-rdpmitm-config
            mountPath: /upgraded-rdpmitm-config
          - name: privx-config
            mountPath: /etc/nginx/privx
            subPath: nginxprivx
          - name: privx-database-certificate
            mountPath: /certificate-mount
            readOnly: true
          - name: privx-upgrade-scripts
            mountPath: /upgradescripts

        resources: {}
          # limits:
          #   cpu: 100m
          #   memory: 128Mi
          # requests:
          #   cpu: 100m
          #   memory: 128Mi
    serviceAccount:
      create: false
      annotations: {}
      name: upgrader
    rbac:
      create: false
